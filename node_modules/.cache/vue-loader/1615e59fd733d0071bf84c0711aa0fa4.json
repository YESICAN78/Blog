{"remainingRequest":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\src\\components\\Register.vue?vue&type=style&index=0&id=7bf3755a&scoped=true&lang=less&","dependencies":[{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\src\\components\\Register.vue","mtime":1603599479136},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8qIEBpbXBvcnQgdXJsKCk7IOW8leWFpWNzc+exuyAqLw0KLmZvcm0taXRlbSB7DQogIHBhZGRpbmctcmlnaHQ6IDMwcHg7DQp9DQoudmNvZGUgew0KICB1c2VyLXNlbGVjdDogbm9uZTsNCiAgLmVsLWlucHV0IHsNCiAgICB3aWR0aDogMzUlOw0KICAgIGZsb2F0OiBsZWZ0Ow0KICB9DQogIGRpdi5zdmcgew0KICAgIHdpZHRoOiAzNSU7DQogICAgZmxvYXQ6IGxlZnQ7DQogICAgaGVpZ2h0OiA0MHB4Ow0KICAgIC9kZWVwLyBzdmcgew0KICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50Ow0KICAgIH0NCiAgfQ0KICAucmVmcmVzaCB7DQogICAgd2lkdGg6IDMwJTsNCiAgICBoZWlnaHQ6IDQwcHg7DQogICAgZmxvYXQ6IGxlZnQ7DQogICAgbGluZS1oZWlnaHQ6IDUwcHg7DQogICAgY29sb3I6IGJsdWU7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICB9DQp9DQo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components","sourcesContent":["<!-- 注册页面 -->\r\n<template>\r\n  <el-dialog title=\"提示\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"beforeClose\">\r\n    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" :rules=\"rules\">\r\n      <el-form-item class=\"form-item\" label=\"用户名:\" prop=\"user\">\r\n        <el-input v-model=\"form.user\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item class=\"form-item\" label=\"输入密码\" prop=\"password\">\r\n        <el-input v-model=\"form.password\" type=\"password\" show-password></el-input>\r\n      </el-form-item>\r\n      <el-form-item class=\"form-item\" label=\"确认密码\" prop=\"checkpassword\">\r\n        <el-input v-model=\"form.checkpassword\" type=\"password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item class=\"vcode\" label=\"验证码\" prop=\"vcode\">\r\n        <el-input v-model=\"form.vcode\"></el-input>\r\n        <div class=\"svg\" v-html=\"register.svgText\"></div>\r\n        <el-link\r\n          class=\"refresh\"\r\n          @click=\"getVocde\"\r\n          type=\"primary\"\r\n          :disabled=\"register.disabled\"\r\n        >{{register.refreshText}}</el-link>\r\n      </el-form-item>\r\n    </el-form>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button type=\"primary\" @click=\"handelColse\" :disabled=\"register.SubmitDisabled\">立即注册</el-button>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport request from \"../api/index\";\r\nconst getregistervcode = request.getregistervcode;\r\nconst getCheckVcode = request.getCheckVcode;\r\nconst postRegister = request.postRegister;\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      //form表单的数据\r\n      form: {\r\n        user: \"\",\r\n        password: \"\",\r\n        checkpassword: \"\",\r\n        vcode: \"\"\r\n      },\r\n      //表单验证数据\r\n      rules: {\r\n        user: [\r\n          //trigger失去焦点触发\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n          {\r\n            //数据类型\r\n            type: \"string\",\r\n            //正则规则\r\n            pattern: /^[\\w\\u4e00-\\u9fa5\\uac00-\\ud7ff\\u0800-\\u4e00\\-]{2,6}$/,\r\n            message: \"2-6位，数字，字母，_ -中日韩文\",\r\n            trigger: [\"blur\", \"change\"]\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value) {\r\n                if (\r\n                  /^[\\w<>,.?|;':\"{}!@#$%^&*()\\/\\-\\[\\]\\\\]{6,18}$/.test(value)\r\n                ) {\r\n                  callback();\r\n                } else {\r\n                  callback(new Error(\"密码6-18位,不允许出现奇怪的字符\"));\r\n                }\r\n              } else {\r\n                callback(new Error(\"请输入密码\"));\r\n              }\r\n              //在这里还需要验证确认密码的认证\r\n              /**\r\n               * 如果在vue里面想要操作DOM的话\r\n               * 就给父级标签 设置 ref=\"name\"\r\n               * 然后通过this.$refs.name的方式获取\r\n               * */\r\n\r\n              this.form.checkpassword &&\r\n                this.$refs.form.validateField(\"checkpassword\");\r\n            },\r\n            type: \"string\",\r\n            message: \"6-18位，不允许出现奇怪的字符\",\r\n            trigger: [\"blur\", \"change\"],\r\n            required: true\r\n          }\r\n        ],\r\n        checkpassword: [\r\n          { required: true, message: \"再次输入密码\", trigger: \"blur\" },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value) {\r\n                if (value === this.form.password) {\r\n                  callback();\r\n                } else {\r\n                  callback(new Error(\"两次输入的密码不一致\"));\r\n                }\r\n              } else {\r\n                callback(new Error(\"请再次输入密码\"));\r\n              }\r\n            },\r\n            trigger: [\"blur\", \"change\"]\r\n          }\r\n        ],\r\n        //验证码验证\r\n        vcode: [\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (!value) {\r\n                callback(new Error(\"请输入验证码\"));\r\n              } else {\r\n                let toUpperCase = value.toUpperCase();\r\n                //失去焦点验证验证码(再次请求)\r\n                getCheckVcode(toUpperCase)\r\n                  .then(res => {\r\n                    if (res.data.code === 0) {\r\n                      callback();\r\n                    } else {\r\n                      callback(new Error(\"验证码错误\"));\r\n                    }\r\n                  })\r\n                  .catch(e => {\r\n                    callback(new Error(\"未知的错误\",e));\r\n                  });\r\n              }\r\n            },\r\n            required: true,\r\n            trigger: [\"blur\", \"change\"]\r\n          }\r\n        ]\r\n      },\r\n      //注册相关的数据\r\n      register: {\r\n        svgText: \"Loading...\",\r\n        refreshText: \"刷新\",\r\n        disabled: true,\r\n        timer: null,\r\n        //按钮的显示影藏\r\n        SubmitDisabled: false\r\n      }\r\n    };\r\n  },\r\n  props: [\"dialogVisible\"],\r\n  methods: {\r\n    //获取验证码\r\n    getVocde() {\r\n      getregistervcode().then(res => {\r\n        //清除上一次保存的时间\r\n        clearTimeout(this.register.timer);\r\n        let _t = 0;\r\n        let fn = () => {\r\n          _t += 1000;\r\n          if (_t > res.data.time) {\r\n            clearTimeout(this.register.timer);\r\n            this.register.refreshText = \"刷新\";\r\n            this.register.disabled = false;\r\n          } else {\r\n            this.register.disabled = true;\r\n            this.register.refreshText =\r\n              (((res.data.time - _t) / 1000) | 0) + \"s后重试\";\r\n          }\r\n        };\r\n        this.register.timer = setInterval(fn, 1000);\r\n        fn();\r\n        this.register.svgText = res.data.data;\r\n      });\r\n    },\r\n    //注册点击\r\n    handelColse() {\r\n      this.register.SubmitDisabled = true;\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          //验证通过\r\n          postRegister(this.form)\r\n            .then(res => {\r\n              //无论是注册失败 还是成功都要刷新验证码\r\n              this.getVocde();\r\n              if (res.data.code) {\r\n                let msg = res.data.msg;\r\n                this.$message({\r\n                  message: res.data.msg,\r\n                  type: \"warning\",\r\n                  offset: 100,\r\n                  duration: 1500\r\n                });\r\n                //清除表单数据\r\n                this.$refs[\"form\"].resetFields();\r\n              } else {\r\n                this.$message({\r\n                  message: res.data.msg,\r\n                  type: \"success\",\r\n                  offset: 100,\r\n                  duration: 1500\r\n                });\r\n                this.register.SubmitDisabled = true;\r\n                //注册成功关闭页面\r\n                setTimeout(() => {\r\n                  this.$emit(\"handelRegister\")\r\n                }, 1500);\r\n                this.$refs[\"form\"].resetFields();\r\n              }\r\n            })\r\n            .catch(e => {\r\n              this.getVocde();\r\n              console.log(e);\r\n            });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    beforeClose() {\r\n      this.$confirm(\"确定关闭🤣?\")\r\n        .then(() => {\r\n          this.$emit(\"handelRegister\");\r\n        })\r\n        .catch(() => {});\r\n    }\r\n  },\r\n  //生命周期 - 创建完成（访问当前this实例）\r\n  created() {},\r\n  //生命周期 - 挂载完成（访问DOM元素）\r\n  mounted() {\r\n    this.getVocde();\r\n  },\r\n  destroyed() {\r\n    clearTimeout(this.register.tomer);\r\n  }\r\n};\r\n</script>\r\n<style scoped lang='less'>\r\n/* @import url(); 引入css类 */\r\n.form-item {\r\n  padding-right: 30px;\r\n}\r\n.vcode {\r\n  user-select: none;\r\n  .el-input {\r\n    width: 35%;\r\n    float: left;\r\n  }\r\n  div.svg {\r\n    width: 35%;\r\n    float: left;\r\n    height: 40px;\r\n    /deep/ svg {\r\n      width: 100% !important;\r\n      height: 100% !important;\r\n    }\r\n  }\r\n  .refresh {\r\n    width: 30%;\r\n    height: 40px;\r\n    float: left;\r\n    line-height: 50px;\r\n    color: blue;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>"]}]}