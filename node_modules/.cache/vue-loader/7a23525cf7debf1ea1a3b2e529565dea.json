{"remainingRequest":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\src\\components\\Container.vue?vue&type=template&id=49781c01&scoped=true&","dependencies":[{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\src\\components\\Container.vue","mtime":1603690075970},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\第三阶段\\第三阶段Vue\\Blog\\Blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}